name: Tracker0
on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:

jobs:
  track0:
    runs-on: ubuntu-latest
    env:
      BOT_API: ${{ secrets.BOT_API }}
      CHAT_ID: ${{ secrets.CHAT }}
    # BOT_ID and CHAT_ID are used to communicate with Telegram API
    steps:
      - name: Install Dep
        run: sudo pip install pyTelegramBotAPI && sudo pip install telegraph

      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          repository: geek0609/rom-tracker
          token: ${{ secrets.PAT }}
          ref: new-implementation

      - name: Run main.py
        run: sudo python3 main.py ${{ secrets.CHAT }} ${{ secrets.BOT_API }} roms.txt

      - name: Commit and Push
        if: ${{ always() }}
        run: sudo bash git_commit.sh

      - name: Upload Logs
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          if-no-files-found: ignore
          name: Logs
          path: Failing.log

  track1:
    if: always()
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      BOT_API: ${{ secrets.BOT_API }}
      CHAT_ID: ${{ secrets.CHAT }}
    # BOT_ID and CHAT_ID are used to communicate with Telegram API
    steps:
      - name: Install Dep
        run: sudo pip install pyTelegramBotAPI && sudo pip install telegraph

      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          repository: geek0609/rom-tracker
          token: ${{ secrets.PAT }}
          ref: new-implementation

      - name: Run main.py
        run: sudo python3 main.py ${{ secrets.CHAT }} ${{ secrets.BOT_API }} roms1.txt

      - name: Commit and Push
        if: ${{ always() }}
        run: sudo bash git_commit.sh

      - name: Upload Logs
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          if-no-files-found: ignore
          name: Logs
          path: Failing.log

  track2:
    if: always()
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      BOT_API: ${{ secrets.BOT_API }}
      CHAT_ID: ${{ secrets.CHAT }}
    # BOT_ID and CHAT_ID are used to communicate with Telegram API
    steps:
      - name: Install Dep
        run: sudo pip install pyTelegramBotAPI && sudo pip install telegraph

      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          repository: geek0609/rom-tracker
          token: ${{ secrets.PAT }}
          ref: new-implementation

      - name: Run main.py
        run: sudo python3 main.py ${{ secrets.CHAT }} ${{ secrets.BOT_API }} roms2.txt

      - name: Commit and Push
        if: ${{ always() }}
        run: sudo bash git_commit.sh

      - name: Upload Logs
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          if-no-files-found: ignore
          name: Logs
          path: Failing.log

  track3:
    if: always()
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      BOT_API: ${{ secrets.BOT_API }}
      CHAT_ID: ${{ secrets.CHAT }}
    # BOT_ID and CHAT_ID are used to communicate with Telegram API
    steps:
      - name: Install Dep
        run: sudo pip install pyTelegramBotAPI && sudo pip install telegraph

      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          repository: geek0609/rom-tracker
          token: ${{ secrets.PAT }}
          ref: new-implementation

      - name: Run main.py
        run: sudo python3 main.py ${{ secrets.CHAT }} ${{ secrets.BOT_API }} roms3.txt

      - name: Commit and Push
        if: ${{ always() }}
        run: sudo bash git_commit.sh

      - name: Upload Logs
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          if-no-files-found: ignore
          name: Logs
          path: Failing.log

  track4:
    if: always()
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      BOT_API: ${{ secrets.BOT_API }}
      CHAT_ID: ${{ secrets.CHAT }}
    # BOT_ID and CHAT_ID are used to communicate with Telegram API
    steps:
      - name: Install Dep
        run: sudo pip install pyTelegramBotAPI && sudo pip install telegraph

      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          repository: geek0609/rom-tracker
          token: ${{ secrets.PAT }}
          ref: new-implementation

      - name: Run main.py
        run: sudo python3 main.py ${{ secrets.CHAT }} ${{ secrets.BOT_API }} roms4.txt

      - name: Commit and Push
        if: ${{ always() }}
        run: sudo bash git_commit.sh

      - name: Upload Logs
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          if-no-files-found: ignore
          name: Logs
          path: Failing.log

  track5:
    if: always()
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      BOT_API: ${{ secrets.BOT_API }}
      CHAT_ID: ${{ secrets.CHAT }}
    # BOT_ID and CHAT_ID are used to communicate with Telegram API
    steps:
      - name: Install Dep
        run: sudo pip install pyTelegramBotAPI && sudo pip install telegraph

      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          repository: geek0609/rom-tracker
          token: ${{ secrets.PAT }}
          ref: new-implementation

      - name: Run main.py
        run: sudo python3 main.py ${{ secrets.CHAT }} ${{ secrets.BOT_API }} roms5.txt

      - name: Commit and Push
        if: ${{ always() }}
        run: sudo bash git_commit.sh

      - name: Upload Logs
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          if-no-files-found: ignore
          name: Logs
          path: Failing.log

  track6:
    if: always()
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      BOT_API: ${{ secrets.BOT_API }}
      CHAT_ID: ${{ secrets.CHAT }}
    # BOT_ID and CHAT_ID are used to communicate with Telegram API
    steps:
      - name: Install Dep
        run: sudo pip install pyTelegramBotAPI && sudo pip install telegraph

      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          repository: geek0609/rom-tracker
          token: ${{ secrets.PAT }}
          ref: new-implementation

      - name: Run main.py
        run: sudo python3 main.py ${{ secrets.CHAT }} ${{ secrets.BOT_API }} roms6.txt

      - name: Commit and Push
        if: ${{ always() }}
        run: sudo bash git_commit.sh

      - name: Upload Logs
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          if-no-files-found: ignore
          name: Logs
          path: Failing.log

  track7:
    if: always()
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      BOT_API: ${{ secrets.BOT_API }}
      CHAT_ID: ${{ secrets.CHAT }}
    # BOT_ID and CHAT_ID are used to communicate with Telegram API
    steps:
      - name: Install Dep
        run: sudo pip install pyTelegramBotAPI && sudo pip install telegraph

      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          repository: geek0609/rom-tracker
          token: ${{ secrets.PAT }}
          ref: new-implementation

      - name: Run main.py
        run: sudo python3 main.py ${{ secrets.CHAT }} ${{ secrets.BOT_API }} roms7.txt

      - name: Commit and Push
        if: ${{ always() }}
        run: sudo bash git_commit.sh

      - name: Upload Logs
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          if-no-files-found: ignore
          name: Logs
          path: Failing.log

  track8:
    if: always()
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      BOT_API: ${{ secrets.BOT_API }}
      CHAT_ID: ${{ secrets.CHAT }}
    # BOT_ID and CHAT_ID are used to communicate with Telegram API
    steps:
      - name: Install Dep
        run: sudo pip install pyTelegramBotAPI && sudo pip install telegraph

      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          repository: geek0609/rom-tracker
          token: ${{ secrets.PAT }}
          ref: new-implementation

      - name: Run main.py
        run: sudo python3 main.py ${{ secrets.CHAT }} ${{ secrets.BOT_API }} roms8.txt

      - name: Commit and Push
        if: ${{ always() }}
        run: sudo bash git_commit.sh

      - name: Upload Logs
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          if-no-files-found: ignore
          name: Logs
          path: Failing.log